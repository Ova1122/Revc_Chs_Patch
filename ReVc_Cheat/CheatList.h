#pragma once
enum
{
	MI_PLAYER = 0,
	MI_COP,
	MI_SWAT,
	MI_FBI,
	MI_ARMY,
	MI_MEDIC,
	MI_FIREMAN,
	MI_MALE01,

	MI_HFYST = 9,
	MI_HFOST,
	MI_HMYST,
	MI_HMOST,
	MI_HFYRI,
	MI_HFORI,
	MI_HMYRI,
	MI_HMORI,
	MI_HFYBE,
	MI_HFOBE,
	MI_HMYBE,
	MI_HMOBE,
	MI_HFYBU,
	MI_HFYMD,
	MI_HFYCG,
	MI_HFYPR,
	MI_HFOTR,
	MI_HMOTR,
	MI_HMYAP,
	MI_HMOCA,
	MI_TAXI_D = MI_HMOCA,
	MI_BMODK,
	MI_BMYKR,
	MI_BFYST,
	MI_BFOST,
	MI_BMYST,
	MI_BMOST,
	MI_BFYRI,
	MI_BFORI,
	MI_BMYRI,
	MI_BFYBE,
	MI_BMYBE,
	MI_BFOBE,
	MI_BMOBE,
	MI_BMYBU,
	MI_BFYPR,
	MI_BFOTR,
	MI_BMOTR,
	MI_BMYPI,
	MI_BMYBB,
	MI_WMYCR,
	MI_WFYST,
	MI_WFOST,
	MI_WMYST,
	MI_WMOST,
	MI_WFYRI,
	MI_WFORI,
	MI_WMYRI,
	MI_WMORI,
	MI_WFYBE,
	MI_WMYBE,
	MI_WFOBE,
	MI_WMOBE,
	MI_WMYCW,
	MI_WMYGO,
	MI_WFOGO,
	MI_WMOGO,
	MI_WFYLG,
	MI_WMYLG,
	MI_WFYBU,
	MI_WMYBU,
	MI_WMOBU,
	MI_WFYPR,
	MI_WFOTR,
	MI_WMOTR,
	MI_WMYPI,
	MI_WMOCA,
	MI_WFYJG,
	MI_WMYJG,
	MI_WFYSK,
	MI_WMYSK,
	MI_WFYSH,
	MI_WFOSH,
	MI_JFOTO,
	MI_JMOTO,

	MI_CBA,// = 83,
	MI_CBB,
	MI_HNA,
	MI_HNB,
	MI_SGA,
	MI_SGB,
	MI_CLA,
	MI_CLB,
	MI_GDA,
	MI_GDB,
	MI_BKA,
	MI_BKB,
	MI_PGA,
	MI_PGB,
	MI_VICE1,
	MI_VICE2,
	MI_VICE3,
	MI_VICE4,
	MI_VICE5,
	MI_VICE6,
	MI_VICE7,
	MI_VICE8,
	MI_WFYG1,
	MI_WFYG2,// = 106,	// last regular ped
	// three more peds possible
	MI_SPECIAL01 = 109,
	MI_SPECIAL02,
	MI_SPECIAL03,
	MI_SPECIAL04,
	MI_SPECIAL05,
	MI_SPECIAL06,
	MI_SPECIAL07,
	MI_SPECIAL08,
	MI_SPECIAL09,
	MI_SPECIAL10,
	MI_SPECIAL11,
	MI_SPECIAL12,
	MI_SPECIAL13,
	MI_SPECIAL14,
	MI_SPECIAL15,
	MI_SPECIAL16,
	MI_SPECIAL17,
	MI_SPECIAL18,
	MI_SPECIAL19,
	MI_SPECIAL20,
	MI_SPECIAL21,// = 129,

	MI_LAST_PED = MI_SPECIAL21,
	MI_FIRST_VEHICLE,

	MI_LANDSTAL = MI_FIRST_VEHICLE,
	MI_IDAHO,
	MI_STINGER,
	MI_LINERUN,
	MI_PEREN,
	MI_SENTINEL,
	MI_RIO,
	MI_FIRETRUCK,
	MI_TRASH,
	MI_STRETCH,
	MI_MANANA,
	MI_INFERNUS,
	MI_VOODOO,
	MI_PONY,
	MI_MULE,
	MI_CHEETAH,
	MI_AMBULAN,
	MI_FBICAR,
	MI_MOONBEAM,
	MI_ESPERANT,
	MI_TAXI,
	MI_WASHING,
	MI_BOBCAT,
	MI_MRWHOOP,
	MI_BFINJECT,
	MI_HUNTER,
	MI_POLICE,
	MI_ENFORCER,
	MI_SECURICA,
	MI_BANSHEE,
	MI_PREDATOR,
	MI_BUS,
	MI_RHINO,
	MI_BARRACKS,
	MI_CUBAN,
	MI_CHOPPER,
	MI_ANGEL,
	MI_COACH,
	MI_CABBIE,
	MI_STALLION,
	MI_RUMPO,
	MI_RCBANDIT,
	MI_ROMERO,
	MI_PACKER,
	MI_SENTXS,
	MI_ADMIRAL,
	MI_SQUALO,
	MI_SEASPAR,
	MI_PIZZABOY,
	MI_GANGBUR,
	MI_AIRTRAIN,
	MI_DEADDODO,
	MI_SPEEDER,
	MI_REEFER,
	MI_TROPIC,
	MI_FLATBED,
	MI_YANKEE,
	MI_CADDY,
	MI_ZEBRA,
	MI_TOPFUN,
	MI_SKIMMER,
	MI_PCJ600,
	MI_FAGGIO,
	MI_FREEWAY,
	MI_RCBARON,
	MI_RCRAIDER,
	MI_GLENDALE,
	MI_OCEANIC,
	MI_SANCHEZ,
	MI_SPARROW,
	MI_PATRIOT,
	MI_LOVEFIST,
	MI_COASTG,
	MI_DINGHY,
	MI_HERMES,
	MI_SABRE,
	MI_SABRETUR,
	MI_PHEONIX,
	MI_WALTON,
	MI_REGINA,
	MI_COMET,
	MI_DELUXO,
	MI_BURRITO,
	MI_SPAND,
	MI_MARQUIS,
	MI_BAGGAGE,
	MI_KAUFMAN,
	MI_MAVERICK,
	MI_VCNMAV,
	MI_RANCHER,
	MI_FBIRANCH,
	MI_VIRGO,
	MI_GREENWOO,
	MI_JETMAX,
	MI_HOTRING,
	MI_SANDKING,
	MI_BLISTAC,
	MI_POLMAV,
	MI_BOXVILLE,
	MI_BENSON,
	MI_MESA,
	MI_RCGOBLIN,
	MI_HOTRINA,
	MI_HOTRINB,
	MI_BLOODRA,
	MI_BLOODRB,
	MI_VICECHEE,

	// HACK
	MI_TRAIN = -1,
	MI_DODO = -2,

	MI_LAST_VEHICLE = MI_VICECHEE,

	MI_WHEEL_RIM,
	MI_WHEEL_OFFROAD,
	MI_WHEEL_TRUCK,

	MI_CAR_DOOR,// = 240,
	MI_CAR_BUMPER,
	MI_CAR_PANEL,
	MI_CAR_BONNET,
	MI_CAR_BOOT,
	MI_CAR_WHEEL,
	MI_BODYPARTA,
	MI_BODYPARTB,

	MI_WHEEL_SPORT = 250,
	MI_WHEEL_SALOON,
	MI_WHEEL_LIGHTVAN,
	MI_WHEEL_CLASSIC,
	MI_WHEEL_ALLOY,
	MI_WHEEL_LIGHTTRUCK,
	MI_WHEEL_SMALLCAR,

	MI_AIRTRAIN_VLO, // = 257,
	MI_MOBILE,

	MI_BRASS_KNUCKLES, // 259
	MI_SCREWDRIVER,
	MI_GOLFCLUB,
	MI_NIGHTSTICK,
	MI_KNIFE,
	MI_BASEBALL_BAT,
	MI_HAMMER,
	MI_MEAT_CLEAVER,
	MI_MACHETE,
	MI_KATANA,
	MI_CHAINSAW,
	MI_GRENADE,
	MI_TEARGAS,
	MI_MOLOTOV,
	MI_MISSILE,
	MI_COLT45,
	MI_PYTHON,
	MI_RUGER,
	MI_SHOTGUN,
	MI_SPAS12_SHOTGUN,
	MI_STUBBY_SHOTGUN,
	MI_M4,
	MI_TEC9,
	MI_UZI,
	MI_SILENCEDINGRAM,
	MI_MP5,
	MI_SNIPERRIFLE,
	MI_LASERSCOPE,
	MI_ROCKETLAUNCHER,
	MI_FLAMETHROWER,
	MI_M60,
	MI_MINIGUN,
	MI_BOMB,
	MI_CAMERA,
	MI_FINGERS,
	MI_MINIGUN2,

	MI_CUTOBJ01,// = 295,
	MI_CUTOBJ02,
	MI_CUTOBJ03,
	MI_CUTOBJ04,
	MI_CUTOBJ05,


	NUM_DEFAULT_MODELS,// = 300
};

enum CHEAT_TYPE
{
	CHEAT_NONE = 0,
	GODMODE,
	HEALTH,
	ARMOUR,
	MONEY,
	GIVE_WEAPON,
	WANTED_LEVEL,
	VEHICLE,
	PLAYER_SPEED,
	PlAYER_JUMP,
	AMMO,
	VehicleProof
};
enum GET_VALUE
{
	VALUE_NONE = 0,
	CurrentStamina,//当前体力
	MaxStamina,//最大体力
	MoveSpeed,//移动速度
	PlayerInfo,
	VehicleInfo
	

};

struct WeaopnStruct
{
	int wtype = 0;
	int mtype = 0;
	int mtype2 = 0;
	int ammo = 0;
	bool unused = false;

};

//车辆防御
struct CarProof
{
	bool LockedDoor = false;

	bool bulletProof = false;//防弹
	bool bFireProof = false;//防火
	bool bCollisionProof = false;//防碰撞
	bool bMeleeProof = false;//防近战
	bool bExplosionProof = false; //防爆炸
	bool bTyresDontBurst = false;//防爆胎

};

class CheatList
{

public:


	static void InitPatch();
	static void UpDate();
	static void AddCheat(CHEAT_TYPE type, bool isloop, void* data = nullptr);
	static void RemoveCheat(CHEAT_TYPE type);
	static void* GetDataAddress(GET_VALUE type);

};

